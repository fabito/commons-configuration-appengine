apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: "jacoco"
apply plugin: 'coveralls'

version =  '1.1-SNAPSHOT'
group = 'com.github.fabito'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:0.3.0'
    }
}
	
// tag::repositories[]
def localMavenRepo = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
repositories {
    mavenCentral()
    mavenRepo url: localMavenRepo
}
// end::repositories[]

// tag::jar[]
jar {
    baseName = 'gaemeleon-core'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
// end::jar[]

// tag::dependencies[]
dependencies {
    compile "commons-configuration:commons-configuration:1.10"
    compile "com.google.appengine:appengine-api-1.0-sdk:1.9.0"
    compile "javax.inject:javax.inject:1"
    
    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile group: 'com.google.appengine', name: 'appengine-tools-sdk', version: '1.9.0'
    testCompile group: 'com.google.appengine', name: 'appengine-testing', version: '1.9.0'
    testCompile group: 'com.google.appengine', name: 'appengine-api-stubs', version: '1.9.0'
    testCompile 'com.google.guava:guava:16.0.1'
}
// end::dependencies[]

// tag::wrapper[]
task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}
// end::wrapper[]

artifacts {
    archives sourcesJar
    archives javadocJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://localhost/home/fabio/Development/eclipse-workspaces/oss/mvn-repo/releases")
            snapshotRepository(url: "file://localhost/home/fabio/Development/eclipse-workspaces/oss/mvn-repo/snapshots")
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}