allprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'maven'
	apply plugin: "jacoco"
	apply plugin: 'coveralls'
	apply plugin: 'gitrelease'
    group = 'com.github.fabito'
    version = '1.0'
}

subprojects {
	def localMavenRepo = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
	repositories {
	    mavenCentral()
	    mavenRepo url: localMavenRepo
	}
}

buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath 'no.entitas.gradle:gradle-release-plugin:1.16'
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:0.3.0'
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

// tag::wrapper[]
task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}
// end::wrapper[]


jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://localhost/home/fabio/Development/eclipse-workspaces/oss/mvn-repo/releases")
            snapshotRepository(url: "file://localhost/home/fabio/Development/eclipse-workspaces/oss/mvn-repo/snapshots")
        }
    }
}

release {
    failOnSnapshotDependencies = false
    versionStrategy = { currentVersion ->
        if (System.properties['release.version']) {
            System.properties['release.version']
        } else {
            new BigDecimal(currentVersion).add(BigDecimal.ONE).toPlainString()
        }
    }
    startVersion = { currentBranch -> "1" }
}